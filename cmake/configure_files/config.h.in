/*
   Copyright (c) 2009-2016, Jack Poulson
   All rights reserved.

   This file is part of Elemental and is under the BSD 2-Clause License,
   which can be found in the LICENSE file in the root directory, or at
   http://opensource.org/licenses/BSD-2-Clause
*/
#ifndef EL_CONFIG_H
#define EL_CONFIG_H

#include "hydrogen_config.h"

/* Build type and version information */
#define EL_GIT_SHA1 "@GIT_SHA1@"
#define EL_VERSION_MAJOR "@EL_VERSION_MAJOR@"
#define EL_VERSION_MINOR "@EL_VERSION_MINOR@"
#define EL_VERSION_PATCH "@EL_VERSION_PATCH@"
#define EL_CMAKE_BUILD_TYPE "@CMAKE_BUILD_TYPE@"

#ifdef HYDROGEN_RELEASE_BUILD
#define EL_RELEASE
#endif

#ifdef Hydrogen_EXPORTS
#define EL_EXPORTS
#endif

#cmakedefine EL_HYBRID
#cmakedefine BUILD_SHARED_LIBS
#cmakedefine MSVC

/* Compiler information */
#define EL_CMAKE_C_COMPILER   "@CMAKE_C_COMPILER@"
#define EL_CMAKE_CXX_COMPILER "@CMAKE_CXX_COMPILER@"
#define EL_CXX_FLAGS          "@CXX_FLAGS@"
#cmakedefine EL_HAVE_F90_INTERFACE
#ifdef EL_HAVE_F90_INTERFACE
# include "El/FCMangle.h"
#endif
#define EL_FORT_LOGICAL @EL_FORT_LOGICAL@
#define EL_FORT_TRUE    @EL_FORT_TRUE@
#define EL_FORT_FALSE   @EL_FORT_FALSE@

/* Message Passing Interface */
#define EL_MPI_C_COMPILER        "@MPI_C_COMPILER@"
#define EL_MPI_C_INCLUDE_PATH    "@MPI_C_INCLUDE_PATH@"
#define EL_MPI_C_COMPILE_FLAGS   "@MPI_C_COMPILE_FLAGS@"
#define EL_MPI_C_LIBRARIES       "@MPI_C_LIBRARIES@"
#define EL_MPI_C_LINK_FLAGS      "@MPI_C_LINK_FLAGS@"
#define EL_MPI_CXX_COMPILER      "@MPI_CXX_COMPILER@"
#define EL_MPI_CXX_INCLUDE_PATH  "@MPI_CXX_INCLUDE_PATH@"
#define EL_MPI_CXX_COMPILE_FLAGS "@MPI_CXX_COMPILE_FLAGS@"
#define EL_MPI_CXX_LIBRARIES     "@MPI_CXX_LIBRARIES@"
#define EL_MPI_CXX_LINK_FLAGS    "@MPI_CXX_LINK_FLAGS@"

/* Math libraries */
#define EL_MATH_LIBS "@MATH_LIBS@"

#cmakedefine EL_BUILT_BLIS_LAPACK
#cmakedefine EL_HAVE_OPENBLAS
#cmakedefine EL_BUILT_OPENBLAS

#cmakedefine HYDROGEN_BLAS_SUFFIX @HYDROGEN_BLAS_SUFFIX@
#cmakedefine HYDROGEN_LAPACK_SUFFIX @HYDROGEN_LAPACK_SUFFIX@

#cmakedefine EL_HAVE_SCALAPACK
#cmakedefine EL_BUILT_SCALAPACK
#cmakedefine EL_HAVE_SCALAPACK_SUFFIX
#ifdef EL_HAVE_SCALAPACK_SUFFIX
 #define EL_SCALAPACK_SUFFIX @EL_SCALAPACK_SUFFIX@
#endif

#cmakedefine EL_HAVE_FLA_BSVD
#cmakedefine EL_HAVE_QUAD
#cmakedefine EL_HAVE_QUADMATH
#cmakedefine EL_HAVE_QD
#cmakedefine EL_HAVE_MPC
#cmakedefine EL_HAVE_SHORT
#cmakedefine EL_HAVE_MKL
#cmakedefine EL_HAVE_MKL_GEMMT
#cmakedefine EL_DISABLE_MKL_CSRMV

/* Miscellaneous configuration options */
#define EL_RESTRICT @EL_RESTRICT@
#cmakedefine EL_HAVE_PRETTY_FUNCTION
#cmakedefine EL_HAVE_OPENMP
#cmakedefine EL_HAVE_OMP_COLLAPSE
#cmakedefine EL_HAVE_OMP_SIMD
#cmakedefine EL_HAVE_QT5
#cmakedefine EL_AVOID_COMPLEX_MPI
#cmakedefine EL_USE_BYTE_ALLGATHERS
#cmakedefine EL_USE_64BIT_INTS
#cmakedefine EL_USE_64BIT_BLAS_INTS

/* Sparse-direct configuration */
#cmakedefine EL_USE_CUSTOM_ALLTOALLV

/* Advanced configuration options */
#cmakedefine EL_ZERO_INIT
#cmakedefine EL_CACHE_WARNINGS
#cmakedefine EL_UNALIGNED_WARNINGS
#cmakedefine EL_VECTOR_WARNINGS

#ifdef BUILD_SHARED_LIBS
# if defined _WIN32 || defined __CYGWIN__
#  ifdef __GNUC__ /* Compiling with GNU on Windows */
#   ifdef EL_EXPORTS
#    define EL_EXPORT __attribute__ ((dllexport))
#   else
#    define EL_EXPORT __attribute__ ((dllimport))
#   endif
#  else  /* Compiling with non-GNU on Windows (check for MSVC?) */
#   ifdef EL_EXPORTS
#    define EL_EXPORT __declspec(dllexport)
#   else
#    define EL_EXPORT __declspec(dllimport)
#   endif
#  endif
#  define EL_LOCAL
# else
#  if __GNUC__ >= 4
#   define EL_EXPORT __attribute__ ((visibility ("default")))
#   define EL_LOCAL  __attribute__ ((visibility ("hidden")))
#  else
#   define EL_EXPORT
#   define EL_LOCAL
#  endif
# endif
#else
# define EL_EXPORT
# define EL_LOCAL
#endif

#cmakedefine EL_HAVE_VALGRIND

#endif /* EL_CONFIG_H */
